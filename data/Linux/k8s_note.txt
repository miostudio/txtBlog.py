Kubernetes教程(K8s入门到精通)





========================================
K8S 简介与知识框架
----------------------------------------
1. 
Infrastructure as a Service 阿里云
Platform as a service 新浪云
Software as service Office 365



2. PaaS 的标准后来就是 docker。
怎么管理 docker 呢？资源管理器。

历史进程：
(1) Apache MESOS: 分布式管理框架。
	后来twiter使用，2019年转为 k8s.

(2) swarm，现在是docker的组间。
好处：轻量，只有几十Mb。实现很好。
	大规模化 也可以用。
缺点：为什么没有被用上呢？功能太简单！需要手工实现。
2019年 阿里云不支持选择 swarm。

(3) 现在基本都在使用 k8s，它的logo是一个 船舵。
google 推出的。
google内部资源管理系统 borg，使用 Go 语言重新开发的。
特点：
	轻量级：使用 Go，号称现代c语言。消耗资源少。
	开源：
	弹性伸缩：
	负载均衡：内部模块支持 IPVS
适合人员：
	软件开发、测试、运维、架构师、项目经理。





3. K8S 知识框架
知识框架
K8S 结构说明
- 网络结构
- 组件结构


(1) 介绍说明
前世今生
K8S 框架
K8S 关键字含义

(2) 基础概念
Pod 概念
- 自主式 Pod
- 管理器管理的 pod
- 服务发现
- Pod 协同

控制器类型

网络通讯模式
- 网络通讯模式说明
- 组间通讯模式说明

(3) K8S: 构建 K8S 集群

(4) 资源清单
yaml 语法
通过资源清单编写 Pod

Pod 的生命周期: 重点、难点
- initC
- Pod phase
- 容器探针
  - livenessProbe
  - readenessProbe
- Pod hook
- 重启策略


(5) Pod 控制器说明
什么是控制器
控制器类型说明
- ReplicationController 和 ReplicaSet
- Deployment
- DaemonSet
- Job
- CronJob
- StatefulSet
- Horizontal Pod Autoscaling

(6) 服务发现
Service 原理
- Service 含义
- Service 常见分类
  - ClusterIP
  - NodePort
  - ExternalName
- Service 实现方式
  - userspace
  - iptables
  - ipvs


(7) 存储
服务分类
- 有状态服务：DBMS 数据库管理系统，
- 无状态服务：apache，

docker 更适合无状态的服务，但是主流的服务是有状态的。
所以需要提供存储服务。
掌握多种存储类型的特点，并且能在不同环境中选择合适的存储方案。
- 几个陷阱：


(8) 调度器
调度器概念
掌握调度器原理
能够根据要求把 Pod 定义到想要的节点运行。



(9) 安全
集群的认证、鉴权、访问控制，原理及其流程。

(10) HELM
等价概念是 linux 的yum 包管理工具。
不过 yum 安装的是包，而 helm安装的是集群。

掌握 HELM 原理，HELM 模板自定义，通过HELM部署一些常见插件。


(11) 运维 
kubeadm 源码修改，达到证书可用期限为10年。
kubernetes 高可用构建







========================================
组件说明：由 Borg 结构到 K8S 结构
----------------------------------------
1. Borg 系统的结构

master 用来分发任务的
	为了保证高可用，最好有3,5,7,9个副本。
	防止1个停了风险太大，偶数个发生冲突时投票平了。
let 用来执行具体任务。

管理方式 configfile
- borgcfg
- cmd tools
- web browsers


调度器 scheluler --> Paxos 数据库 --> Borglet 请求






2. K8S 架构 
(1) API server 是所有访问的统一入口

kubectl --> API server
web UI --> API server

scheduler --> API server --> etcd 数据库
replication controller -->API server

Node 是干活的
-kubelet
  - Pod 
  - container


(2) etcd 的官方将它定位成一个可信赖的分布式键值存储服务。
它能够为整个分布式集群存储一些关键数据，协作分布式集群的正常运转。

ETCD 存储分为2个版本
- v2 memory
- v3 database

推荐在 kubernetes 集群中使用 Etcd v3.
v2 在k8s v1.11 中弃用。



(3) ETCD 键值对数据库架构
https://etcd.io/

ETCD http server 

Raft -- WAL, Entry, Snapshot
Store

CRI: container runtime interface
Kubelet: 直接跟容器引擎交互，实现容器的生命周期管理。
kube-proxy: 负责写入规则至 iptables, ipvs 实现服务映射访问

(4)其他重要的插件
CoreDNS: 可以为集群中的的SVC创建一个域名IP的对应关系解析。
Dashboard: 给 k8s 提供一个B/S 访问体系。
Ingress Controller: 官方只能实现四层代理，Ingress 可以实现七层代理。
Fedetation: 提供一个可以跨集群中心多K8S统一管理功能。
Prometheus: 提供一个K8S集群的监控能力。
ELK: 提供 K8S 集群日志统一分析介入平台。





========================================
Pod 概念 //ing
----------------------------------------
官方pod概念：https://kubernetes.io/docs/concepts/workloads/pods/

单词
analogous [əˈnæləɡəs] adj. 类似的；[昆] 同功的；可比拟的
ephemeral [ɪˈfemərəl] adj. 短暂的；朝生暮死的 n. 只生存一天的事物；短生植物
terminology [ˌtɜːmɪˈnɒlədʒi] n. 术语，术语学；用辞

facet [ˈfæsɪt] n. 部分，方面；（宝石的）琢面，刻面；



1. 两种
In terms of Docker concepts, a Pod is similar to a group of Docker containers with shared namespaces and shared filesystem volumes.

- 自主式pod
- 管理器管理的pod

Pod 内首先会自动启动一个 pause 容器，
其余容器共享这个容器的网络和存储。
- 再启动一个 nginx 容器，一个php fpm容器，它们端口不能冲突。

(1)RC, ReplicationController 新版本 ReplicaSet.
(2)ReplicaSet 同上，但是支持集合式 selector
(3) 建议使用 Deployment 来自动管理 ReplicaSet，
这样不用担心不兼容问题: 如ReplicaSet 不支持 rolling-update，但是 Deployment 支持。









========================================
进度条  7/70
----------------------------------------
2021.9.21: 7









========================================
----------------------------------------




========================================
----------------------------------------




========================================
----------------------------------------


========================================
----------------------------------------




========================================
----------------------------------------




========================================
----------------------------------------



