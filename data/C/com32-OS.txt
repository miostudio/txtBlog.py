com32-OS





========================================
** 清华大学 计算机操作系统：基于 uCore 操作系统 (109讲)
----------------------------------------

基本概念及原理
操作系统介绍
中断及系统调用
内存管理
进程及线程
调度
同步
文件系统
I/O 子系统


uCore 操作系统: https://github.com/chyyuu/mooc_os_lab


操作系统实验
	0 准备
	1 系统启动及中断
	2 物理内存管理
	3 虚拟内存管理
	4 内核线程管理
	5 用户进程管理
	6 CPU 调度
	7 同步与互斥
	8 文件系统


预备知识
	计算机组成原理: Intel 80386+
	数据结构
	C和汇编语言


OS 内容
	外壳 shell: GUI on windows; command on Linux;
	内核 kernel: OS课程重点。
		CPU调度器
		物理内存管理
		虚拟内存管理
		文件系统管理
		中断处理和设备驱动


OS kernel的特征：
	并发: 一段时间内多个访问，一个核可以切换执行；
		* 并行: 一个时间点，同时访问，要求多个核；
	共享: “同时”访问
		* 共享互斥
	虚拟: 一个电脑虚拟成多个，每个用户都感觉在使用整个硬件。
	异步: 程序的执行不是稳定持续执行的，而是走走停停，向前推进的速度不可预知。
		但只要运行环境相同，OS需要保证程序运行的结果也要相同。
	


为什么学OS?
	


========================================

----------------------------------------







========================================
cur: 2/109
----------------------------------------
https://www.bilibili.com/video/BV1wq4y1M7qf?p=2
2022.7.22 1,2,
2022.7.24 2,3












========================================
** 操作系统（哈工大 李治军 老师）32讲: 老师很有激情，好! [前置知识: 汇编语言]
----------------------------------------
https://www.bilibili.com/video/BV1d4411v7u7

1. 操作系统
(1) 硬件基础上，就是操作系统，然后才是各种应用软件。

(2) 主要概念
OS: 单核操作系统
	CPU 管理
	内存管理
	终端管理
	磁盘管理
	文件管理

高级操作系统：
	网络管理
	电源管理
	多核管理

(3) 多个层次
从应用软件出发：探索操作系统
	集中在使用计算机的接口上

从应用软件出发：进入OS
	一段文字如何写入磁盘的

从硬件出发: 设计并实现OS
	给一个板子，配一个OS

CMU的课程: 硬件-配OS-编app


(4) 八个真实操作实践

(5) 别的学生在干什么？
我们的学生是要出去和别人竞争的...
	* 别人已经掌握SVD(奇异值分解)及其应用，我们还在抠高斯消元法解方程组
	* 高斯消元法: 1800年左右
	* SVD: 1960-2000，目前正应用到很多领域中

斯坦福怎么学OS的？CUM呢？
实验1: 扩展线程： 实现线程调度
实验2: 实现系统调用: 将整个接口剥掉，添加
实验3: 实现虚拟内存管理: 扩展实现内存管理
实验4: 扩展文件系统: 扩展实现一个文件管理

这4个是OS的核心，能做到这个，需要对OS很深的理解。
然后对计算机有很深的理解，才能做系统工作，才堪当大任。


(6) 动手实践，再次强调
斯坦福 OS 课程的一句话: Learn OS concepts, by coding theme!

打开 OS 黑盒子！
在原理和代码之间反复频繁切换！
八个很复杂的实验：复杂、难调

绝知此事要躬行！








========================================
2. 打开 OS 的黑盒子: Open the OS
----------------------------------------

1. OS 怎么启动的呢？黑屏中背后干了什么？

如何去探索，尽量自己去寻找答案？
实验1：如何控制开机画面？

* 从知识和常识出发进行思考
* 打开电源->计算机要开始工作了
* 计算机怎么工作？这是我们最基本的

(1) 白纸到图灵机
把人在纸上计算2+3的过程：
	看到纸上的 3+2: 控制器从输入读入数据
	脑子里计算结果 5: 计算器计算结果
	写下来 5: 控制器把结果打印出来

只能做一个算法，比如+。

(2) 图灵机到 通用图灵机
怎么能做多个算法呢？

控制器先读入逻辑(程序)，然后再处理输入的数据。

如何编码这个逻辑？这个其实就是应用程序。


(3) 从通用图灵机到计算机
冯诺依曼：把程序载入内存，使用指针逐行 “取址执行”。


(4) 打开电源
计算模型：关注指针 IP 及其指向的内容。
由硬件设计者决定。

前置知识: 汇编语言。

看看x86 PC
1) x86 PC 刚开机时PC处理实模式
	和保护模式对应，实模式的寻址CS:IP(CS左移4位+IP)，和保护模式不一样。
2) 开机时，CS=0xFFFF; IP=0x0000
3) 寻址 0xFFFF0(ROM BIOS映射区)
4) 检查RAM，键盘，显示器，软硬磁盘
5) 将磁盘0磁盘0扇区读入0x7c00处: 操作系统的引导扇区 512字节
6) 设置 cs=0x07c0, ip=0x0000


(5) 0x7c00 的512字节是什么？
引导扇区代码: bootsect.s 汇编
操作系统对汇编要求很高，要求确定性的地方都会用到。

boot扇区: 1个
setup的扇区: 4个
system模块: os代码




========================================
3. OS 启动: Power on ...
----------------------------------------











========================================
Cur: 3/32
----------------------------------------
current:
https://www.bilibili.com/video/BV1d4411v7u7?spm_id_from=333.337.search-card.all.click&vd_source=826befc4ac0d0fa3b98deaa3efc7f800
2022.7.22 01,
2022.7.24 01,02,03





========================================
----------------------------------------


========================================
----------------------------------------








========================================
----------------------------------------






========================================
----------------------------------------


========================================
----------------------------------------






========================================
----------------------------------------


========================================
----------------------------------------



