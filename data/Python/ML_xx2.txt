
========================================
矩阵和线性代数
----------------------------------------
主要内容:
矩阵 
	线性代数式有用的：以SVD为例
	矩阵的乘法、状态转移矩阵
	矩阵和向量组
特征值和特征向量
	对称阵、正交阵、正定阵
	数据白化 ?
	正交基
	QR分解 / LFM
矩阵求导
	向量对向量求导
	标量对向量求导
	标量对矩阵求导
#





========================================
矩阵
----------------------------------------


========================================
|-- SVD分解
----------------------------------------
1. 假设A是一个mxn的矩阵，则存在一个分解，使得
Amxn = Umxm . Bmxn . V^Tnxn

(1)通常将奇异值由大到小排列，这样，对角矩阵B就能由A唯一确定了。

U和V都是酉矩阵(单位正交方阵)，就是 U^T.U=E, V^T.V=E.

B是对角矩阵，特征值不够的补0.


(2)与特征值、特征向量的概念对应
B对角线上的元素为矩阵A的奇异值，B=diag(sigma1,...,sigmai)
U的第i列称为A的关于sigmai的左奇异向量；
V的第i列称为A的关于sigmai的右奇异向量；


(3) 做法
(A.A^T).ui=Lambdai.ui => U
(A^T.A).vi=Lambdai.vi => V
可以推出
	sigmai=sqrt(lambdai) #奇异值的平方等于特征值。
	ui=1/sigmai*A*vi 
#

(4) 怎么使用呢？
V是一个单位正交方阵，对称矩阵，所以V^T=V.

A=U.B.V=[u1,...,um] .diag(sigma1,...,sigman) .[v1T,...,vnT]T
=[u1sigma1, ..., umsigmam] .[v1T,...,vnT]T
=sigma1.u1.v1T+...+sigmai.ui.viT+...
=求和(i=1, n, sigmai.ui.viT)
ui是mx1列向量，viT是1xn行向量，乘积是m*n矩阵; 
前面加上从大到小的权重sigmai，我们有理由认为前面的比较重要，
	- 也就是 u1.v1T是第一重要的特征，重要性为sigma1
	- 也就是 u2.v2T是第2重要的特征，重要性为sigma2
然后取前k个sigmai，后面的都归0，则加和后可以获得A矩阵的近似效果。



(5) py代码实例:图像的前k个奇异值





========================================
|-- 代数余子式
----------------------------------------
行列式的值=主对角线乘积的和 - 副对角线乘积的和

1. 去掉i行和j列元素后的n-1阶矩阵叫做元素aij的余子式，记做Mij。
2. 代数余子式 Aij=(-1)^(i+j) * Mij;

1)det(A)=求和(i=1,n, aij*Aij) 就是行列式的值等于某一行元素与其代数余子式的乘积的和。
2)det(A)=求和(j=1,n, aij*Aij) 列也成立。
* 求偏导 d(|A|)/dA 可能会用到。

例:
A=
[2 1]
[1 3]
det(A)=2*A11 + 1*A12=2*(-1)^2*3 + 1*(-1)^3 *1=6-1=5





========================================
|-- 伴随矩阵与方阵的逆
----------------------------------------
1. 对于nxn方阵，每个元素aij都有代数余子式Aij=(-1)^(i+j) *Mij;
构造nxn的方阵A*=
|A11 A21 ... An1|
...
|A1n A2n ... Ann|

A* 称为A的伴随矩阵。
注意：Aij位于A*的第j行第i列。


2. 性质
A.A* = |A|.E
其中 E 是单位矩阵



3. 逆矩阵

上文的 A.A* = |A|.E 两边同时除以 |A| 得 E=A.A*/|A|
所以 A的逆 A^-1=A*/|A|

这个要求伴随矩阵，运算量太大，没啥实际作用。


性质： 如果 |A| != 0 则A可逆。





========================================
|-- 范德蒙行列式
----------------------------------------
1. 证明范德蒙行列式 Vandermonde
任意选择互不相等的数字 x1,x2,...,xn
第一行是0次方，第二行是1次方，第3行是2次方，第n行是n-1次方。
Dn=
|1 1 ... 1|
|x1 x2 ... xn|
|x1^2 x2^2 ... xn^2|
...
|x1^(n-1) x2^(n-1) ... xn^(n-1)|
= 求积( 对任意的i和j满足n>=i>j>=1, (xi-xj) )
就是前一个数-后一个数 的乘积。


提示：数学归纳法
注：参考 Lagrange/Newton插值法

A=
|1 1 1|
|1 2 3|
|1 4 9|
=18+3+4-2-12-9=2 对角线乘积硬算
=(2-1)(3-1)(3-2)=2 使用以上性质


2. 用途

当有一个多项式函数经过5个点时，怎么求这个多项式函数呢？
已知点 (x1,y1),(x2,y2),...,(x6,y6)
设 f(x)=a0+a1*x+a2*x^2+...+a5*x^5
带入点到函数
a0*x1^0+a1*x1+a2*x1^2+...+a5*x1^5=y1
...
a0*x6^0+a1*x6+a2*x6^2+...+a5*x6^5=y1

把以上关于 a=[a0 a1 ... a5]T的方程组写成矩阵形式，就是 
D=
[1 x1 x1^2 ... x1^5]
...
[1 x6 x6^2 ... x6^5]

D*a=y, 其中y=[y1 y2 ... y6]T
求解 a=D^-1.y 的关键就是D是否可逆。

然后什么情况下D可逆呢？只要D的1次项系数也就是[x1 x2 ... x6]两两不相等即可。

n个点，就可以拟合一个 n-1 次的方程。




========================================
|-- 矩阵的乘法: 状态转移矩阵，及矩阵特征向量的意义
----------------------------------------
1. 先要保证元素个数Amxs . Bsxn = Cmxn, 内标要一致才能做矩阵乘法。
使用A的第i行和B的第j列对应元素相乘再相加，得到C的第i行第j列元素。

cij=求和(k=1,s, aik*bkj)


2. 怎么理解呢？概率转移矩阵为例
(1)
考虑某随机过程pi，它的状态有n个，用1~n表示。
记在当前时刻t时位于i状态，它在t+1时位于j状态的概率为P(i,j)=P(j|i):
即状态转移的概率只依赖于前一个状态。

时间:  1 ->  2 ->  3 -> ... -> n
状态: X1 -> X2 -> X3 -> ... -> Xn

每个状态Xi有确定的n个状态，每个状态只依赖于前一个状态X(i+1)。
而Xi和前一个状态X(i+2)是互相独立的。
这就是一个马尔科夫模型。

举例子: 按经济状况将人群分成上、中、下三个阶层，用1,2,3表示。
假设当前处于某个阶层只和上一代有关，即：考察父代为第i阶层，则子代为第j阶层的概率。
假定为如下转移概率矩阵:

P     子代的阶层
父[0.65 0.28 0.07]
代[0.15 0.67 0.18]
的[0.12 0.36 0.52]
# 解释
父代1阶层，子代1阶层的概率 0.65
父代1阶层，子代2阶层的概率 0.28
父代1阶层，子代3阶层的概率 0.07
...

这个概率构成的矩阵，所以每一行的和必须为1.

如果知道现在各个阶层的人数 a=[a1 a2 a3]T
则下一代各个阶层的人数为 a^T.P
第1阶层还剩下的 a1*0.65
第2阶层转为第1阶层的 a2*0.15
第3阶层转为第1阶层的 a3*0.12

这就是全概率公式 P(X(n+1)=j) = 求和(i=1,K, P(Xn=i)*P(X(n+1)=j|Xn=i) )
它和我们线性代数的乘法定义是完全一致的。

a^T.P=
[a1*0.65+a2*0.15+a3*0.12]
[a1*0.28+a2*0.67+a3*0.36]
[a1*0.07+a2*0.18+a3*0.52]

用向量的形式表示就是 a(n+1)=a(n).P

(2)
思考: 初始概率分布a(0)对最终分布的影响？
a0=[0.05,0.15,0.8], 等初始值进行尝试，当乘以足够多的P后，结果趋于稳定。

转换矩阵P满足:
- 全是非负数，(0,1]
- 每行和为1；


大概的证明: 
当n渐渐表大时 a0T*P^n 趋于稳定（记为向量xT），和初始值a0T无关。
也就是 
a0T.P^n=xT 
a0T.P^n.P=xT 
得到 xT.P=xT
转置 PT.x=1.x

考虑特征值的定义 列向量x 是P^T矩阵在特征值为1时对应的特征向量。
x=[0.286 0.489 0.225]T


(3) 平稳分布
线性方程 x.P=x的非负解为 pi, 而 P^n唯一，因此线性方程x.P=x的唯一非负解。、、

该问题在马尔科夫模型中继续探讨。



稳定的原因是什么呢？  //todo
细节平稳



(4) 思考 
1) 根据定义来计算 C=A.B, 需要m*n*s次乘法
- 即: 若A，B都是n阶方阵，C的计算时间复杂度为O(n^3)
- 问: 可否设计更快的算法?

--> 分而治之 //todo

2) 三个矩阵A,B,C的阶分别是a0xa1, a1xa2, a2xa3,从而
(A.B).C和A.(B.C)的乘法次数是 a0*a1*a2+a0*a2*a3 和 a1*a2*a3+a0*a1*a3, 
二者一般情况下是不相等的。
- 问：给定n个矩阵的连乘积 A1.A2. ... An，如何添加括号来改变计算次序，使得乘法的计算量最小？

--> 动态规划 //todo

参考代码:
C语言写的 https://www.bilibili.com/video/BV1Tb411H7uC?p=3 41'19''







========================================
|-- 矩阵和向量的乘法: 线性空间及变换
----------------------------------------

1. A为mxn的矩阵，x为nx1的列向量，则A.x为mx1的列向量，
记为 y=A.x 

2. 由于n维列向量和n维空间的点一一对应，
上式实际上给出了从n维空间的点到m维空间点的线性变换

3. 特殊的，若m=n，则A.x完成n维空间内的线性变换。
- 旋转、平移(齐次坐标下)

例1: 旋转 
二维空间内A点围绕原点旋转theta角度到B点，则 A.xa=xb, 
其中 xa=[xa ya]T, xb=[xb yb]T, 旋转矩阵 A=
[cosT, -sinT]
[sinT, cosT]


例2: 平移 
先对点扩充一个维度 [xa ya]T --> [xa ya 1]T
[1 0 dx] [xa]
[0 1 dy] [ya]
[0 0 1 ].[1 ]
=
[xa+dx]
[ya+dy]
[1]

例3: 如果旋转+平移呢
P= 例2的平移矩阵的前2行2列变成例1中的旋转矩阵即可
[1 0 dx]
[0 1 dy]
[0 0 1 ]




应用:
图像的移动、三维物体的移动，用矩阵的观点来看，就是左边乘以一个矩阵。
胳膊要动，就左乘一个矩阵；
手要动，再左乘一个矩阵；
手指头要动，再左乘一个矩阵。






========================================
|-- 矩阵的秩、线性方程组的解
----------------------------------------
1.定义
(1)子式: 如果一个mxn矩阵A中，任取k行k列，不改变这k^2个元素的次序，得到k阶方阵，称为矩阵的k阶子式。

显然，mxn矩阵的k阶子式有 C(m,k)*C(n,k)个。

(2) 设在矩阵A中有一个行列式不等于0的r阶子式D，且所有r+1阶子式(如果存在的话)的行列式全等于0，那么，D称为矩阵A的最高阶非零子式，r称为矩阵A的秩，记做R(A)=r.
- nxn 的可逆矩阵，秩为n
- 可逆矩阵又称为满秩矩阵
- 矩阵的秩等于它行(列)向量组的秩



2. 秩与线性方程组的关系

秩对应着独立约束条件的个数。

对于n元线性方程组 A.x=b
- 无解的充要条件是 R(A)<R(A,b)
- 有唯一解 <==> R(A)=R(A,b)=n    #例: 3个方程3个未知数 1个解
- 有无限多解 <==> R(A)=R(A,b)<n  #例: 2个方程3个未知数 无数个解。


(2) 推论
对于n阶矩阵A，
- Ax=0 有非零解 <==> R(A)<n
	如果r(A)=n, 则A可逆，x=0.A^-1=0，只有零解。
- Ax=b 有解 <==> R(A)=R(A,b)





========================================
|-- 向量组等价
----------------------------------------
1. 向量b能由向量组A: a1,...,am线性表示的充要条件是，
矩阵A=[a1,a2,...,am]的秩等于矩阵B=[a1,...,am,b]的秩。




2. 设有2个向量组A:a1,...,am及B:b1,...,bn，若B组的向量都能由向量组A线性表示，则称向量组B能由向量组A线性表示。

若向量组A和向量组B能互相线性表示，则称两个向量组等价。




3. 系数矩阵 
Amxs . Ksxn =  Bmxn
A=[a1,...,as]
B=[b1,...,bn]

B组能有用A组线性表示，即每个向量bj，存在k1j,k2j,...,kmj，使得 
bj=k1ja1+k2ja2+...+ksjas=[a1 ... as].[k1j ... ksj]T
从而得到系数矩阵K
[b1 ... bn] = [a1 ... as].K

(1) 从空间角度理解
相当于A的s列空间，映射到B的n列空间。



(2). 对 B=A.K 的再认识
如果 B=A.K，则矩阵B的列向量可以由A构成的列向量线性表示，K就是这个表示的系数矩阵.


对偶的，矩阵B的行向量能由K的行向量线性表示，A是这一表示的系数矩阵。
证明: 取转置后 B^T=K^T.A^T，B^T的列可由K^T的列线性表示，
就是B的行可由K的行线性表示。



向量组B=(b1,b2,...,bn)能由向量组A=(a1,a2, ...,as)线性表示的充要条件是:
矩阵A的秩等于矩阵B的秩 R(A)=R(B)















========================================
|-- 正交阵，特征值和特征向量
----------------------------------------
1.定义 
若n阶矩阵A满足 AT.A=I,称A为正交矩阵，简称正交阵。

A是正交阵 <==> A的列(行)向量都是单位向量，且两两正交。


2. 正交变换
A为正交阵，x为向量，则A.x称为正交变换。

性质: 正交变换不改变向量长度。

A3x3 . x3x1=y3x1





3. 思考
(1)若A、B都是n阶正交阵，那么，A.B是正交阵吗？
解:
AT.A=E
BT.B=E
记 A.B=C
BT.AT=CT
两边相乘，得到 
A.B.BT.AT=C.CT
E=C.CT
所以C=A.B是正交矩阵。



(2) 正交阵和对称阵，能够通过何种操作获得已定意义下的联系？

A3x3 . x3x1=y3x1
相当于对向量x做变换A，得到向量y。
如果变换后y的方向和x一致，也就是仅仅是大小相差了L倍，即:
A.x=Lambda.x

所以把向量x叫做矩阵A在特征值为Lambda时的特征向量。

求法: (A-L.E).x=0，其中x!=0，则 |A-L.E|=0，解行列式，求出来L。
再带入原式子 (A-L.E).x=0 求向量x。





4. 特征值的性质
设n阶矩阵A=(aij)的特征值为L1,L2,...,Ln,则 
L1+...+Ln=a11+a22+...+ann #特征值的和等于主要对角线元素和，也就是矩阵A的迹trace(A)。
L1*L2*...*Ln=|A| #特征值的乘积等于该矩阵的行列式。

(2) 思考 
已知L是方阵A的特征值，则 
1) L^2是A^2的特征值
2) A可逆时，L^-1是A^-1的特征值

提示: 定义。

证明: A.x=L.x
左乘一个A得 A.A.x=A.L.x=L.A.x=L.A.x=L.(L.x) 所以
A^2.x=L^2.x
特征向量不变。

推广一下，定义 A^0=I，其中 I 是单位矩阵。
如果L是A的特征值，则 L^n是A^n的特征值。n属于整数。


如果A可逆，同左乘以A^-1
A^-1.A.x=A^-1.L.x
1/L.x=A^-1.x
所以A^-1的特征值是1/L，特征向量不变。






5. 不同特征值对应的特征向量
(1) 设 L1,...,Lm是方阵A的m个特征值，
p1,...,pm是依次与之对应的特征向量，
若L1,...,Lm各不相等，则 p1,...,pm线性无关。

(2) 总结与思考
1) 不同特征值对应的特征向量，线性无关
2) 若方阵A是对称阵呢？结论是否会加强？
	协方差矩阵、二次型矩阵、无向图邻接矩阵：对称阵
	线性无关 加强为 两两正交。
#

A^T.A 一定是对称的。证明: (AT.A)T=AT.A





6. 对称方矩的性质
(1) 实对称矩阵的特征值一定是实数。
(2) 实对称阵 的特征向量可以取 实向量。
(3) 实对称矩阵矩阵 不同特征值的特征向量 正交。【**】
A.x1=L.x1
A.x2=L.x2
...
A.xm=L.xm

相加 
A.[x1 ... xm]=L1.x1+...+Lm.xm=diag(L1,...,Lm).[x1 ... xm]
A.P=diag(L1,...,Lm).P
其中P是特征向量为 列向量 构成的矩阵，且两两正交，则P可逆:
P^-1.A.P=diag(L1,...,Lm)
此时，称矩阵A和对角矩阵diag(L1,...,Lm)相似。


(4)
可以对P做正交化、单位化，得到矩阵Q。
因为Q是正交矩阵，所以 Q^T.Q=I，
根据定义 Q^-1=Q^T
所以 上式可以写成 QT.A.Q=diag(L1,...,Lm)
此时，称矩阵A和对角矩阵diag(L1,...,Lm)合同。

在谱聚类、PCA等章节中将会继续讨论。





(5) 应用: 白化/漂白whitening
语音记录矩阵X是nxm矩阵，每列是装置在时刻ti记录的语音，每行是一个人。
如果每一列 时刻ti 记为向量xi，则 X=[x1 x2 ... xn]
而X.X^T就是一个nxn的对称的方阵。


计算观测数据x的nxn的对称矩阵A=x.x^T的特征值和特征向量，用特征值形成对角矩阵D，特征向量形成正交矩阵U，则 x.xT=UT.D.U

UT.A.U=diag()=D, 又 UT.U=I, 所以 A=U.D.UT
又A是对称的，同时转置 A=U.D.UT
又因为U是正交矩阵，且对称 //todo 为什么对称呢？
所以，A=UT.D.U


定义D^-0.5=diag(1/sqrt(L1),...,1/sqrt(Lm) )
令 x'=UT.D^-0.5.U.x 
x'.x'^T = (UT.D^-0.5.U.x).(UT.D^-0.5.U.x)^T 
= (UT.D^-0.5.U.x)(x^T.UT.D^-0.5.U)
= UT.D^-0.5.U.(x.x^T).UT.D^-0.5.U
= UT.D^-0.5.U.(UT.D.U).UT.D^-0.5.U
=UT.D^-0.5.D.D^-0.5.U
=UT.U=I

所以 x'是正交矩阵。也即是列向量单位长度，且两两正交。
这样，就保证了x'各个列向量不相关，非线性相关。
我们把这种做法叫做whitening.




白化相当于是预处理，为下一步提供特征。算一种特征选择方法。
原有的是x，经过处理得到x'。
对于2个正弦波的叠加波，经过白化处理，基本能分清2个原始波形了，虽然有点粗糙。
白化能保证特征是正交的。











========================================
|-- 正定矩阵
----------------------------------------
1. 定义: 对于n阶方阵A，若任意n阶向量x，都有XT.A.X>0，则称A是正定矩阵。

若条件变成 XT.A.X>=0，则称A为半正定矩阵。
1xn nxn nx1 = 1x1 就是二次型。

类似的还有 负定阵，半负定矩阵。





2. 性质 
给定任意mxn矩阵A，证明 A^T.A 一定是半正定方阵。
可以增强为 A^T.A是一个半正定的、对称方阵。

该结论在线性回归中将用到。

证明: 对于任意列向量x，
x^T.A^T.A.x= (A.x)^T.(A.x) >=0 就是一个矩阵的平方。
所以 AT.A是半正定的。




3. 正定矩阵的判定
(1) 对称阵A为正定阵；
(2) A的特征值都为正； 
(3) A的n个顺序主子式大于0；
以上三个命题等价。




4. 例题: 给定凸锥的定义如下:
C为凸锥 <==> 
对于任意x1,x2属于C， theta1, theta2>=0, 
有 theta1*x1 + theta2*x2 属于C。

试证明: n阶半正定方阵的集合为凸锥。

证明:
https://www.bilibili.com/video/BV1Tb411H7uC?p=3 82'06'' 



========================================
|-- 标准正交基(两两正交、每个长度都是1)
----------------------------------------
满秩的矩阵可以求出其正交基。

from scipy.linalg import orth
from numpy.linalg import matrix_rank

a=(np.eye(3), np.diag((1.,2.,3.)), np.arange(9, dtype=np.float).reshape( (3,3) ) )
for m in a:
    print('>>>m=')
    print(m, '的秩为: ', matrix_rank(m))
    print('正交基为:\n', orth(m))
    print('\n')
#

对于单位向量，其正交基就是其列向量。

正交基是没有顺序的，所以 [x1 x2 x3]和 [x2 x3 x1]是一样的，都表示空间中的三个向量。


不满秩的就是有3列，但是只有2个特征值，其中一个是二重根。
则只有2个正交基。




========================================
|-- QR分解
----------------------------------------
求特征值可以用定义法 |A-Lambda.E|=0，但是更有操作性的求法是QR分解。


1. 对于mxn的列满秩矩阵A，必有: Amxn=Qmxn.Rnxn
其中，Q^T.Q=I(即 列正交矩阵)，R为非奇异上三角矩阵。
当要求R的对角线元素为正时，该分解唯一。
该分解为QR分解。


2. 作用: 可用于求解矩阵A的特征值、A的逆等问题。
假定已经分解了 A=Q.R 

(1) 用于求逆
假定A可逆，则 A^-1=R^-1.Q^-1
R 是上三角矩阵，求逆很容易 //todo >>>>>>>>>>how ？ 

而Q是正交矩阵，它的逆就是它的转置。



(2) QR分解计算特征值
计算n阶方阵A的特征值，就是先QR分解，再返乘R.Q得到新矩阵；
对新矩阵做QR分解...
迭代几次即可得到特征值在住对角线的对角矩阵。

A=Q.R ==> A1=Q^T.A.Q=R.Q
...
Ak=Qk.Rk ==> A(k+1)=Rk.Qk
...
Ak--> diag(L1,...,Ln)


python代码:
//todo





========================================
|-- 查阅: schmidt正交化 /Givens 变换/ HouseHolder 变换 /Hessenberg矩阵
----------------------------------------


========================================
矩阵的求导
----------------------------------------



========================================
|-- LFM(Latent Factor Model) 隐特征模型
----------------------------------------
一个网站，有M个用户，N个商品。
构成矩阵 Amxn=Umxk . Vnxk^T

用户喜欢某个特征U矩阵，一行表示用户喜欢的特征。
V表示某个商品具有某些特征，一列表示商品的特征。

做点乘法，得到A矩阵，每个点就是用户喜欢某个商品的程度。






========================================
|-- 向量的求导
----------------------------------------
1. 最有难度的一步

A是mxn矩阵，x为nx1的列向量，则A.x为mx1列向量，记 y=A.x
思考 偏导数 dy/dx=?

推导过程: 就是直接写下来
A.x=y


A=
[a11 a12 ... a1n]
[a21 a22 ... a2n]
...
[am1 am2 ... amn]


x=
[x1]
[x2]
... 
[xn]


y=A.x=
[a11x1+a12x2+...+a1nxn]
[a21x1+a22x2+...+a2nxn]
...
[am1x1+am2x2+...+amnxn]


如果dy的1行对x一列分别求偏导，写成和x同样的列形式 
dy/dx=d(A.x)/dx=
[x11 a21 ... am1]
[x21 a22 ... am2]
...
[xn1 a2n ... amn]
=A^T

## 本课程不采用有些文献的“超越矩阵”的说法。因为实践上不利于公式推导。


2. 结论和直接推广
A.x=y
(1) 向量偏导公式
d(A.x)/d(x)=A^T;

d(A.x)/d(x^T)=A;

d(x^T.A)/dx=A //todo 这个对吗？分子的A为什么不转置呢？


在线性回归中将直接使用该公式。





========================================
|-- 标量对向量的导数
----------------------------------------
1. A为nxn矩阵，x为nx1的列向量。记y=xT.A.x  //就是二次型

同理可得 dy/dx=d(xT.A.x)/dx=(A^T + A).x

推导过程: 还是写成具体形式，进行推导
xT.A.x=xT.(A.x)=(x1 ... xn).(求和(j=1,n, a1jxj) ... 求和(j=1,n, anjxj) )T
=求和(i=1,n, xi*求和(j=1,n, aij*xj)  )
=求和(i=1,n 求和(j=1,n, aij*xi*xj)) #二次型

则
d(xT.A.x)/dxi=求和(j=1,n aij*xj) + 求和(j=1,n aji*xj)
=求和(j=1,n, (aij+aji)*xj )

所以，最终
这些向量合并成矩阵，就是最上面的结论。





2. 若A为对称方矩，则有 A^T=A，所以
dy/dx=d(xT.A.x)/dx=(A^T + A).x = 2*A.x






3. 标量对方阵的导数
Anxn的矩阵，|A|为A的行列式，计算 d|A|/dA

解: 根据等式，对于任意的i属于[1,n],
|A|=求和(aij*(-1)^(i+j) * Mij)
有 d|A|/daij = d[求和(aij*(-1)^(i+j) * Mij)]/daij=(-1)^(i+j)*Mij=Aji* //done:就是伴随矩阵的第j行第i列。

从而 d|A|/dA=(A*)^T=|A|.(A^-1)^T
依据 A.A*=|A|.I，第二个等式成立。









========================================
>>>>>>>>>   学习进度条
----------------------------------------

https://www.bilibili.com/video/BV1Tb411H7uC?p=3
>>c3
4 (2020.9.2)
13 (2020.9.5)
37' (2020.9.12)
54' (2020.9.15)
61' (2020.9.23)
70' (2020.9.25)
89' (2020.9.27)
98' (2020.9.28)
106' (2020.10.2) done









========================================
----------------------------------------


========================================
----------------------------------------

